{
	"m_title":"Code Device",
	"m_descr":"The use of this app requires solid knowledge of JavaScript programming. This app allows creating a new device based on some JavaScript Instructions. This JavaScript can poll and calculate any data from anywhere as long as this is doable using JavaScript. The device can be a sensor just showing data but it can also be an actor executing some JavaScript code.<br><br>Settings:<br><ul><li>First of all you need to choose what type of element shall be created. Depending on the type other settings are required.</li><li>All devices need an URL to call the value from the Internet</li><li>There is a chance to form the response using formal logic. In order to do this some detailed JavaScript knowledge is needed.</li><li>Define the polling time</li><li>Define if POST or GET is used</li><li>For Multilevel sensor you can define the scale to be used</li><li>For Switches the URLs for switching can be defined.</li></ul><br>Example: The app shall create an element showing randomly 'on' or 'off'. The JavaScript Code used is 'Math.random() > 0.5 ? 'on' :  'off''",
	"l_icon":"Icon",
	"l_setterOn_toggleButton":"Code for action On",
	"h_getter_sensorBinary":"Should return 'on' or 'off' values",
	"h_getter_sensorMultilevel":"Should return number",
	"l_scale_sensorMultilevel":"Sensor scale",
	"l_setterOn_switchBinary":"Code for action On",
	"h_setterOn_switchBinary":"%% will represent value 'on'",
	"l_setterOff_switchBinary":"Code for action Off",
	"h_setterOff_switchBinary":"%% will represent value 'off'",
	"h_getter_switchBinary":"Should return 'on' or 'off' value",
	"l_setterLevel_switchMultilevel":"Code for action",
	"h_setterLevel_switchMultilevel":"%% will represent value from 0 to 99",
	"l_getter_value":"Code to get value",
	"h_getter_switchMultilevel":"Should return value from 0 to 99",
	"l_getterPollInterval":"Interval in seconds between polling requests",
	"h_getterPollInterval":"Empty or 0 to disable periodical requests (explicit update command will still initiate request process)",
	"rl_updateOnAction": "Update value on action",
	"h_updateOnAction": "On actions (on/off/dimming) update value accordingly before it is polled",
	"rl_skipEventIfSameValue": "Don't send update event if value has not changed",
	"h_skipEventIfSameValue": "If same value is reported, do not send update event. In this case no update listeners will be called."
}
